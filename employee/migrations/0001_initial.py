# Generated by Django 5.2.7 on 2025-10-25 14:02

import base.models
import django.db.models.deletion
import horilla.models
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("base", "0001_initial"),
        ("horilla_audit", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Actiontype",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                ("title", models.CharField(max_length=50)),
                (
                    "action_type",
                    models.CharField(
                        choices=[
                            ("warning", "Warning"),
                            ("suspension", "Suspension"),
                            ("dismissal", "Dismissal"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "block_option",
                    models.BooleanField(
                        default=False,
                        help_text="If is enabled, employees log in will be blocked based on period of suspension or dismissal.",
                        verbose_name="Enable login block :",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Action Type",
                "verbose_name_plural": "Action Types",
            },
        ),
        migrations.CreateModel(
            name="Employee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("badge_id", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "employee_first_name",
                    models.CharField(max_length=200, verbose_name="First Name"),
                ),
                (
                    "employee_last_name",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="Last Name"
                    ),
                ),
                (
                    "employee_profile",
                    models.ImageField(
                        blank=True, null=True, upload_to=horilla.models.upload_path
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("phone", models.CharField(max_length=25)),
                ("address", models.TextField(blank=True, max_length=200, null=True)),
                ("country", models.CharField(blank=True, max_length=100, null=True)),
                ("state", models.CharField(blank=True, max_length=100, null=True)),
                ("city", models.CharField(blank=True, max_length=30, null=True)),
                ("zip", models.CharField(blank=True, max_length=20, null=True)),
                ("dob", models.DateField(blank=True, null=True)),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("other", "Other"),
                        ],
                        default="male",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "qualification",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("experience", models.IntegerField(blank=True, null=True)),
                (
                    "marital_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("single", "Single"),
                            ("married", "Married"),
                            ("divorced", "Divorced"),
                        ],
                        default="single",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("children", models.IntegerField(blank=True, null=True)),
                (
                    "emergency_contact",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                (
                    "emergency_contact_name",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "emergency_contact_relation",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("additional_info", models.JSONField(blank=True, null=True)),
                (
                    "is_from_onboarding",
                    models.BooleanField(
                        blank=True, default=False, editable=False, null=True
                    ),
                ),
                (
                    "is_directly_converted",
                    models.BooleanField(
                        blank=True, default=False, editable=False, null=True
                    ),
                ),
                (
                    "employee_user_id",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="employee_get",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "ordering": ["employee_first_name"],
                "permissions": (
                    ("change_ownprofile", "Update own profile"),
                    ("view_ownprofile", "View Own Profile"),
                ),
            },
        ),
        migrations.CreateModel(
            name="DisciplinaryAction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                ("description", models.TextField(max_length=255)),
                (
                    "unit_in",
                    models.CharField(
                        choices=[("days", "Days"), ("hours", "Hours")],
                        default="days",
                        max_length=10,
                    ),
                ),
                ("days", models.IntegerField(default=1, null=True)),
                (
                    "hours",
                    models.CharField(
                        default="00:00",
                        max_length=6,
                        null=True,
                        validators=[base.models.validate_time_format],
                    ),
                ),
                ("start_date", models.DateField(null=True)),
                (
                    "attachment",
                    models.FileField(
                        blank=True, null=True, upload_to=horilla.models.upload_path
                    ),
                ),
                (
                    "action",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="employee.actiontype",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
                (
                    "employee_id",
                    models.ManyToManyField(
                        to="employee.employee", verbose_name="Employees"
                    ),
                ),
            ],
            options={
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="BonusPoint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "points",
                    models.IntegerField(
                        default=0, help_text="Use negative numbers to reduce points."
                    ),
                ),
                (
                    "encashment_condition",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("==", "equals"),
                            (">", "grater than"),
                            ("<", "less than"),
                            (">=", "greater than or equal"),
                            ("<=", "less than or equal"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                ("redeeming_points", models.IntegerField(blank=True, null=True)),
                ("reason", models.TextField(blank=True, max_length=255, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
                (
                    "employee_id",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bonus_point",
                        to="employee.employee",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EmployeeBankDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                ("bank_name", models.CharField(max_length=50, null=True)),
                ("account_number", models.CharField(max_length=50, null=True)),
                ("branch", models.CharField(max_length=50, null=True)),
                ("address", models.TextField(max_length=255, null=True)),
                ("country", models.CharField(blank=True, max_length=50, null=True)),
                ("state", models.CharField(blank=True, max_length=50, null=True)),
                ("city", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "any_other_code1",
                    models.CharField(
                        max_length=50, null=True, verbose_name="Bank Code #1"
                    ),
                ),
                (
                    "any_other_code2",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Bank Code #2",
                    ),
                ),
                ("additional_info", models.JSONField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "employee_id",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="employee_bank_details",
                        to="employee.employee",
                        verbose_name="Employee",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Employee Bank Details",
                "verbose_name_plural": "Employee Bank Details",
            },
        ),
        migrations.CreateModel(
            name="EmployeeGeneralSetting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                ("badge_id_prefix", models.CharField(default="PEP", max_length=5)),
                (
                    "company_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EmployeeTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "title",
                    models.CharField(max_length=50, null=True, verbose_name="Title"),
                ),
                ("color", models.CharField(max_length=30, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EmployeeWorkInformation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Work Location",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="Work Email"
                    ),
                ),
                (
                    "mobile",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Work Phone"
                    ),
                ),
                (
                    "date_joining",
                    models.DateField(
                        blank=True, null=True, verbose_name="Joining Date"
                    ),
                ),
                (
                    "contract_end_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Contract End Date"
                    ),
                ),
                (
                    "basic_salary",
                    models.IntegerField(
                        blank=True, default=0, null=True, verbose_name="Basic Salary"
                    ),
                ),
                (
                    "salary_hour",
                    models.IntegerField(
                        blank=True, default=0, null=True, verbose_name="Salary Per Hour"
                    ),
                ),
                ("additional_info", models.JSONField(blank=True, null=True)),
                ("experience", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="base.company",
                        verbose_name="Company",
                    ),
                ),
                (
                    "department_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="base.department",
                        verbose_name="Department",
                    ),
                ),
                (
                    "employee_id",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="employee_work_info",
                        to="employee.employee",
                        verbose_name="Employee",
                    ),
                ),
                (
                    "employee_type_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="base.employeetype",
                        verbose_name="Employee Type",
                    ),
                ),
                (
                    "job_position_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="base.jobposition",
                        verbose_name="Job Position",
                    ),
                ),
                (
                    "job_role_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="base.jobrole",
                        verbose_name="Job Role",
                    ),
                ),
                (
                    "reporting_manager_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="reporting_manager",
                        to="employee.employee",
                        verbose_name="Reporting Manager",
                    ),
                ),
                (
                    "shift_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="base.employeeshift",
                        verbose_name="Shift",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True,
                        to="employee.employeetag",
                        verbose_name="Employee tag",
                    ),
                ),
                (
                    "work_type_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="base.worktype",
                        verbose_name="Work Type",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HistoricalBonusPoint",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "history_title",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("history_description", models.TextField(null=True)),
                ("history_highlight", models.BooleanField(default=False, null=True)),
                (
                    "points",
                    models.IntegerField(
                        default=0, help_text="Use negative numbers to reduce points."
                    ),
                ),
                (
                    "encashment_condition",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("==", "equals"),
                            (">", "grater than"),
                            ("<", "less than"),
                            (">=", "greater than or equal"),
                            ("<=", "less than or equal"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                ("redeeming_points", models.IntegerField(blank=True, null=True)),
                ("reason", models.TextField(blank=True, max_length=255, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "employee_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="employee.employee",
                    ),
                ),
                (
                    "history_relation",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="history_set",
                        to="employee.bonuspoint",
                    ),
                ),
                ("history_tags", models.ManyToManyField(to="horilla_audit.audittag")),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical bonus point",
                "verbose_name_plural": "historical bonus points",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalEmployeeWorkInformation",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "history_title",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("history_description", models.TextField(null=True)),
                ("history_highlight", models.BooleanField(default=False, null=True)),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Work Location",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="Work Email"
                    ),
                ),
                (
                    "mobile",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Work Phone"
                    ),
                ),
                (
                    "date_joining",
                    models.DateField(
                        blank=True, null=True, verbose_name="Joining Date"
                    ),
                ),
                (
                    "contract_end_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Contract End Date"
                    ),
                ),
                (
                    "basic_salary",
                    models.IntegerField(
                        blank=True, default=0, null=True, verbose_name="Basic Salary"
                    ),
                ),
                (
                    "salary_hour",
                    models.IntegerField(
                        blank=True, default=0, null=True, verbose_name="Salary Per Hour"
                    ),
                ),
                ("additional_info", models.JSONField(blank=True, null=True)),
                ("experience", models.FloatField(blank=True, default=0, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "company_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="base.company",
                        verbose_name="Company",
                    ),
                ),
                (
                    "department_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="base.department",
                        verbose_name="Department",
                    ),
                ),
                (
                    "employee_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="employee.employee",
                        verbose_name="Employee",
                    ),
                ),
                (
                    "employee_type_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="base.employeetype",
                        verbose_name="Employee Type",
                    ),
                ),
                (
                    "history_relation",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="history_set",
                        to="employee.employeeworkinformation",
                    ),
                ),
                ("history_tags", models.ManyToManyField(to="horilla_audit.audittag")),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "job_position_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="base.jobposition",
                        verbose_name="Job Position",
                    ),
                ),
                (
                    "job_role_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="base.jobrole",
                        verbose_name="Job Role",
                    ),
                ),
                (
                    "reporting_manager_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="employee.employee",
                        verbose_name="Reporting Manager",
                    ),
                ),
                (
                    "shift_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="base.employeeshift",
                        verbose_name="Shift",
                    ),
                ),
                (
                    "work_type_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="base.worktype",
                        verbose_name="Work Type",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical employee work information",
                "verbose_name_plural": "historical employee work informations",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="NoteFiles",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "files",
                    models.FileField(
                        blank=True, null=True, upload_to=horilla.models.upload_path
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EmployeeNote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "description",
                    models.TextField(null=True, verbose_name="Description"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "employee_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="employee_name",
                        to="employee.employee",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="employee.employee",
                    ),
                ),
                (
                    "note_files",
                    models.ManyToManyField(blank=True, to="employee.notefiles"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PolicyMultipleFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                ("attachment", models.FileField(upload_to=horilla.models.upload_path)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Policy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                ("title", models.CharField(max_length=50)),
                ("body", models.TextField()),
                ("is_visible_to_all", models.BooleanField(default=True)),
                (
                    "company_id",
                    models.ManyToManyField(
                        blank=True, to="base.company", verbose_name="Company"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
                (
                    "specific_employees",
                    models.ManyToManyField(
                        blank=True, editable=False, to="employee.employee"
                    ),
                ),
                (
                    "attachments",
                    models.ManyToManyField(
                        blank=True, to="employee.policymultiplefile"
                    ),
                ),
            ],
            options={
                "verbose_name": "Policy",
                "verbose_name_plural": "Policies",
            },
        ),
        migrations.CreateModel(
            name="ProfileEditFeature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                ("is_enabled", models.BooleanField(default=False)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddConstraint(
            model_name="employee",
            constraint=models.UniqueConstraint(
                condition=models.Q(("badge_id__isnull", False)),
                fields=("badge_id",),
                name="unique_badge_id",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="employee",
            unique_together={("employee_first_name", "employee_last_name", "email")},
        ),
    ]
