# Generated by Django 5.2.7 on 2025-10-25 14:02

import biometric.models
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("base", "0002_initial"),
        ("employee", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BiometricDevices",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "machine_type",
                    models.CharField(
                        choices=[
                            ("zk", "ZKTeco / eSSL Biometric"),
                            ("anviz", "Anviz Biometric"),
                            ("cosec", "Matrix COSEC Biometric"),
                            ("dahua", "Dahua Biometric"),
                            ("etimeoffice", "e-Time Office"),
                        ],
                        max_length=18,
                        null=True,
                        verbose_name="Device Type",
                    ),
                ),
                (
                    "machine_ip",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=150,
                        null=True,
                        verbose_name="Machine IP",
                    ),
                ),
                (
                    "port",
                    models.IntegerField(blank=True, null=True, verbose_name="Port No"),
                ),
                (
                    "zk_password",
                    models.CharField(
                        blank=True,
                        default="0",
                        max_length=100,
                        null=True,
                        verbose_name="Password",
                    ),
                ),
                (
                    "bio_username",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=100,
                        null=True,
                        verbose_name="Username",
                    ),
                ),
                (
                    "bio_password",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Password"
                    ),
                ),
                (
                    "anviz_request_id",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="Request ID"
                    ),
                ),
                (
                    "api_url",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="API Url"
                    ),
                ),
                (
                    "api_key",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="API Key"
                    ),
                ),
                (
                    "api_secret",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="API Secret"
                    ),
                ),
                ("api_token", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "api_expires",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("is_live", models.BooleanField(default=False, verbose_name="Is Live")),
                (
                    "is_scheduler",
                    models.BooleanField(default=False, verbose_name="Is Scheduled"),
                ),
                (
                    "scheduler_duration",
                    models.CharField(
                        default="00:00",
                        max_length=10,
                        null=True,
                        validators=[biometric.models.validate_schedule_time_format],
                    ),
                ),
                ("last_fetch_date", models.DateField(blank=True, null=True)),
                ("last_fetch_time", models.TimeField(blank=True, null=True)),
                (
                    "device_direction",
                    models.CharField(
                        choices=[
                            ("in", "In Device"),
                            ("out", "Out Device"),
                            ("alternate", "Alternate In/Out Device"),
                            ("system", "System Direction(In/Out) Device"),
                        ],
                        default="system",
                        max_length=50,
                        verbose_name="Device Direction",
                    ),
                ),
                (
                    "company_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="base.company",
                        verbose_name="Company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Biometric Device",
                "verbose_name_plural": "Biometric Devices",
            },
        ),
        migrations.CreateModel(
            name="BiometricEmployees",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("uid", models.IntegerField(blank=True, null=True)),
                (
                    "ref_user_id",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(99999999)],
                    ),
                ),
                ("user_id", models.CharField(max_length=100, verbose_name="User ID")),
                (
                    "dahua_card_no",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "device_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="biometric.biometricdevices",
                    ),
                ),
                (
                    "employee_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="employee.employee",
                        verbose_name="Employee",
                    ),
                ),
            ],
            options={
                "verbose_name": "Employee in Biometric Device",
                "verbose_name_plural": "Employees in Biometric Device",
            },
        ),
        migrations.CreateModel(
            name="COSECAttendanceArguments",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "last_fetch_roll_ovr_count",
                    models.CharField(max_length=100, null=True),
                ),
                ("last_fetch_seq_number", models.CharField(max_length=100, null=True)),
                (
                    "device_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="biometric.biometricdevices",
                    ),
                ),
            ],
            options={
                "verbose_name": "COSEC Attendance Arguments",
                "verbose_name_plural": "COSEC Attendance Arguments",
            },
        ),
    ]
