services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:8000:8000"
    restart: unless-stopped
    env_file:
      - .env.app.prod
    command: ./entrypoint.sh
    depends_on:
      # db:
      #   condition: service_healthy
      #   required: true
      migrations:
        condition: service_completed_successfully
        required: false
    healthcheck:
      test: ["CMD", "curl", "http://127.0.0.1:8000"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 30s

  # db:
  #   image: postgres:17.2
  #   env_file:
  #     - .env.db.prod
  #   ports:
  #     - "127.0.0.1:5432:5432"
  #   restart: unless-stopped
  #   volumes:
  #     - horilla-data:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD", "pg_isready", "-U", "postgres"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #     start_period: 5s
  
  migrations:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
        required: true
    profiles:
      - migrate
    env_file:
      - .env.app.local
    entrypoint: ["/app/run_migrations.sh"]

volumes:
  horilla-data: