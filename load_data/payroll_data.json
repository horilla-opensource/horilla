[
  {
    "model": "payroll.filingstatus",
    "pk": 1,
    "fields": {
      "created_at": "2024-12-21T08:42:22.725Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status": "Single Filers",
      "based_on": "taxable_gross_pay",
      "use_py": false,
      "python_code": "\"\"\"\nfederal_tax.py\n\"\"\"\n\nYEARLY_TAXABLE_INCOME = 189000.52\n\n\ndef calcluate_federal_tax(yearly_income: int, **kwargs) -> float:\n    \"\"\"\n    Federal Tax calculation method\n\n    yearly_income: The early converted 'based on' amount\n\n    eg: yearly_income-> 189000 then taxable_amount-> 39312.0 (yearly)\n    \"\"\"\n\n    def filter_brackets(brackets: list) -> list:\n        \"\"\"\n        This method to filter out the actual brackets/brackets range\n        \"\"\"\n        # brackets that contains actual bracket range, calculated_rate, and diff amount\n        filterd_brackets = []\n        for bracket in brackets:\n            if bracket[\"max\"] > bracket[\"min\"]:\n\n                # bracket: {'rate': 12, 'min': 11000, 'max': 44725}\n\n                # finding diff amount and adding to the bracket\n                bracket[\"diff\"] = bracket[\"max\"] - bracket[\"min\"]\n                # find bracket rate from the difference and adding to bracket\n                bracket[\"calculated_rate\"] = (bracket[\"rate\"] / 100) * bracket[\"diff\"]\n\n                # bracket: {'rate': 12, 'min': 11000, 'max': 44725, 'diff': 33725, 'calculated_rate': 4047.0}\n\n                filterd_brackets.append(bracket)\n                continue\n            # returning valid filtered brackets\n            return filterd_brackets\n        # returning valid filtered brackets\n        return filterd_brackets\n\n    # filter_brackets method/function will sort out the brackets\n\n    # for example for the 189000 yearly income come in the 32% group,\n    # so the final the max considered as min(231250,189000) which is 189000\n    brackets = [\n        {\"rate\": 10, \"min\": 0, \"max\": min(11000, yearly_income)},\n        {\"rate\": 12, \"min\": 11000, \"max\": min(44725, yearly_income)},\n        {\"rate\": 22, \"min\": 44725, \"max\": min(95375, yearly_income)},\n        {\"rate\": 24, \"min\": 95375, \"max\": min(182100, yearly_income)},\n        {\"rate\": 32, \"min\": 182100, \"max\": min(231250, yearly_income)},\n        {\"rate\": 35, \"min\": 231250, \"max\": min(578125, yearly_income)},\n        {\"rate\": 37, \"min\": 578125, \"max\": max(578125, yearly_income)},\n    ]\n\n    # filtering the brackets to actual range\n    brackets = filter_brackets(brackets=brackets)\n\n    # finding yearly taxable amount\n    taxable_amount = sum(bracket[\"calculated_rate\"] for bracket in brackets)\n\n    \"\"\"\n    use formated_result method to print the table\n    \"\"\"\n    # formated_result(brackets=brackets, taxable_amount=taxable_amount)\n\n    # returning the taxable amount later on the yearly taxable amount-\n    # is converted to daily and calculate federal tax for the total days between the\n    # Payslip period\n    return taxable_amount\n\n\ndef formated_result(brackets: dict, taxable_amount: float) -> None:\n    \"\"\"\n    It will print the brackets such a formated way\n    \"\"\"\n    col_width = 7\n    print(\"----------------------Brackets----------------------\")\n    print(\n        f\"|{'Rate':<{col_width}}  |{'Min':<{col_width}} |{'Max':<{col_width}}  |{'Taxable':<{col_width}}  |{'Bracket Tax':<{col_width}} |\"\n    )\n\n    for bracket in brackets:\n        print(\n            f\"|{bracket['rate']:<{col_width}}% |{bracket['min']:<{col_width}} | {bracket['max']:<{col_width}} | {bracket['diff']:<{col_width}} | {round(bracket['calculated_rate'],2):<{col_width + 3}} |\"\n        )\n\n    print(f\"|             YEARLY TAXABLE INCOME    | {taxable_amount}    |\")\n    print(\"----------------------------------------------------\")\n\n\nmonth_taxable = calcluate_federal_tax(YEARLY_TAXABLE_INCOME)\nprint(\"YEARLY TAXABLE AMOUNT\", month_taxable)",
      "description": "",
      "company_id": null
    }
  },
  {
    "model": "payroll.filingstatus",
    "pk": 2,
    "fields": {
      "created_at": "2024-12-21T08:42:28.019Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status": "Married Filing Separately(MFS)",
      "based_on": "taxable_gross_pay",
      "use_py": false,
      "python_code": "\"\"\"\nfederal_tax.py\n\"\"\"\n\nYEARLY_TAXABLE_INCOME = 189000.52\n\n\ndef calcluate_federal_tax(yearly_income: int, **kwargs) -> float:\n    \"\"\"\n    Federal Tax calculation method\n\n    yearly_income: The early converted 'based on' amount\n\n    eg: yearly_income-> 189000 then taxable_amount-> 39312.0 (yearly)\n    \"\"\"\n\n    def filter_brackets(brackets: list) -> list:\n        \"\"\"\n        This method to filter out the actual brackets/brackets range\n        \"\"\"\n        # brackets that contains actual bracket range, calculated_rate, and diff amount\n        filterd_brackets = []\n        for bracket in brackets:\n            if bracket[\"max\"] > bracket[\"min\"]:\n\n                # bracket: {'rate': 12, 'min': 11000, 'max': 44725}\n\n                # finding diff amount and adding to the bracket\n                bracket[\"diff\"] = bracket[\"max\"] - bracket[\"min\"]\n                # find bracket rate from the difference and adding to bracket\n                bracket[\"calculated_rate\"] = (bracket[\"rate\"] / 100) * bracket[\"diff\"]\n\n                # bracket: {'rate': 12, 'min': 11000, 'max': 44725, 'diff': 33725, 'calculated_rate': 4047.0}\n\n                filterd_brackets.append(bracket)\n                continue\n            # returning valid filtered brackets\n            return filterd_brackets\n        # returning valid filtered brackets\n        return filterd_brackets\n\n    # filter_brackets method/function will sort out the brackets\n\n    # for example for the 189000 yearly income come in the 32% group,\n    # so the final the max considered as min(231250,189000) which is 189000\n    brackets = [\n        {\"rate\": 10, \"min\": 0, \"max\": min(11000, yearly_income)},\n        {\"rate\": 12, \"min\": 11000, \"max\": min(44725, yearly_income)},\n        {\"rate\": 22, \"min\": 44725, \"max\": min(95375, yearly_income)},\n        {\"rate\": 24, \"min\": 95375, \"max\": min(182100, yearly_income)},\n        {\"rate\": 32, \"min\": 182100, \"max\": min(231250, yearly_income)},\n        {\"rate\": 35, \"min\": 231250, \"max\": min(578125, yearly_income)},\n        {\"rate\": 37, \"min\": 578125, \"max\": max(578125, yearly_income)},\n    ]\n\n    # filtering the brackets to actual range\n    brackets = filter_brackets(brackets=brackets)\n\n    # finding yearly taxable amount\n    taxable_amount = sum(bracket[\"calculated_rate\"] for bracket in brackets)\n\n    \"\"\"\n    use formated_result method to print the table\n    \"\"\"\n    # formated_result(brackets=brackets, taxable_amount=taxable_amount)\n\n    # returning the taxable amount later on the yearly taxable amount-\n    # is converted to daily and calculate federal tax for the total days between the\n    # Payslip period\n    return taxable_amount\n\n\ndef formated_result(brackets: dict, taxable_amount: float) -> None:\n    \"\"\"\n    It will print the brackets such a formated way\n    \"\"\"\n    col_width = 7\n    print(\"----------------------Brackets----------------------\")\n    print(\n        f\"|{'Rate':<{col_width}}  |{'Min':<{col_width}} |{'Max':<{col_width}}  |{'Taxable':<{col_width}}  |{'Bracket Tax':<{col_width}} |\"\n    )\n\n    for bracket in brackets:\n        print(\n            f\"|{bracket['rate']:<{col_width}}% |{bracket['min']:<{col_width}} | {bracket['max']:<{col_width}} | {bracket['diff']:<{col_width}} | {round(bracket['calculated_rate'],2):<{col_width + 3}} |\"\n        )\n\n    print(f\"|             YEARLY TAXABLE INCOME    | {taxable_amount}    |\")\n    print(\"----------------------------------------------------\")\n\n\nmonth_taxable = calcluate_federal_tax(YEARLY_TAXABLE_INCOME)\nprint(\"YEARLY TAXABLE AMOUNT\", month_taxable)",
      "description": "",
      "company_id": null
    }
  },
  {
    "model": "payroll.filingstatus",
    "pk": 3,
    "fields": {
      "created_at": "2024-12-21T08:42:34.764Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status": "Married Filing Jointly (MFJ)",
      "based_on": "taxable_gross_pay",
      "use_py": false,
      "python_code": "\"\"\"\nfederal_tax.py\n\"\"\"\n\nYEARLY_TAXABLE_INCOME = 189000.52\n\n\ndef calcluate_federal_tax(yearly_income: int, **kwargs) -> float:\n    \"\"\"\n    Federal Tax calculation method\n\n    yearly_income: The early converted 'based on' amount\n\n    eg: yearly_income-> 189000 then taxable_amount-> 39312.0 (yearly)\n    \"\"\"\n\n    def filter_brackets(brackets: list) -> list:\n        \"\"\"\n        This method to filter out the actual brackets/brackets range\n        \"\"\"\n        # brackets that contains actual bracket range, calculated_rate, and diff amount\n        filterd_brackets = []\n        for bracket in brackets:\n            if bracket[\"max\"] > bracket[\"min\"]:\n\n                # bracket: {'rate': 12, 'min': 11000, 'max': 44725}\n\n                # finding diff amount and adding to the bracket\n                bracket[\"diff\"] = bracket[\"max\"] - bracket[\"min\"]\n                # find bracket rate from the difference and adding to bracket\n                bracket[\"calculated_rate\"] = (bracket[\"rate\"] / 100) * bracket[\"diff\"]\n\n                # bracket: {'rate': 12, 'min': 11000, 'max': 44725, 'diff': 33725, 'calculated_rate': 4047.0}\n\n                filterd_brackets.append(bracket)\n                continue\n            # returning valid filtered brackets\n            return filterd_brackets\n        # returning valid filtered brackets\n        return filterd_brackets\n\n    # filter_brackets method/function will sort out the brackets\n\n    # for example for the 189000 yearly income come in the 32% group,\n    # so the final the max considered as min(231250,189000) which is 189000\n    brackets = [\n        {\"rate\": 10, \"min\": 0, \"max\": min(11000, yearly_income)},\n        {\"rate\": 12, \"min\": 11000, \"max\": min(44725, yearly_income)},\n        {\"rate\": 22, \"min\": 44725, \"max\": min(95375, yearly_income)},\n        {\"rate\": 24, \"min\": 95375, \"max\": min(182100, yearly_income)},\n        {\"rate\": 32, \"min\": 182100, \"max\": min(231250, yearly_income)},\n        {\"rate\": 35, \"min\": 231250, \"max\": min(578125, yearly_income)},\n        {\"rate\": 37, \"min\": 578125, \"max\": max(578125, yearly_income)},\n    ]\n\n    # filtering the brackets to actual range\n    brackets = filter_brackets(brackets=brackets)\n\n    # finding yearly taxable amount\n    taxable_amount = sum(bracket[\"calculated_rate\"] for bracket in brackets)\n\n    \"\"\"\n    use formated_result method to print the table\n    \"\"\"\n    # formated_result(brackets=brackets, taxable_amount=taxable_amount)\n\n    # returning the taxable amount later on the yearly taxable amount-\n    # is converted to daily and calculate federal tax for the total days between the\n    # Payslip period\n    return taxable_amount\n\n\ndef formated_result(brackets: dict, taxable_amount: float) -> None:\n    \"\"\"\n    It will print the brackets such a formated way\n    \"\"\"\n    col_width = 7\n    print(\"----------------------Brackets----------------------\")\n    print(\n        f\"|{'Rate':<{col_width}}  |{'Min':<{col_width}} |{'Max':<{col_width}}  |{'Taxable':<{col_width}}  |{'Bracket Tax':<{col_width}} |\"\n    )\n\n    for bracket in brackets:\n        print(\n            f\"|{bracket['rate']:<{col_width}}% |{bracket['min']:<{col_width}} | {bracket['max']:<{col_width}} | {bracket['diff']:<{col_width}} | {round(bracket['calculated_rate'],2):<{col_width + 3}} |\"\n        )\n\n    print(f\"|             YEARLY TAXABLE INCOME    | {taxable_amount}    |\")\n    print(\"----------------------------------------------------\")\n\n\nmonth_taxable = calcluate_federal_tax(YEARLY_TAXABLE_INCOME)\nprint(\"YEARLY TAXABLE AMOUNT\", month_taxable)",
      "description": "",
      "company_id": null
    }
  },
  {
    "model": "payroll.filingstatus",
    "pk": 4,
    "fields": {
      "created_at": "2024-12-21T08:42:40.096Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status": "Head of Household (HOH)",
      "based_on": "taxable_gross_pay",
      "use_py": false,
      "python_code": "\"\"\"\nfederal_tax.py\n\"\"\"\n\nYEARLY_TAXABLE_INCOME = 189000.52\n\n\ndef calcluate_federal_tax(yearly_income: int, **kwargs) -> float:\n    \"\"\"\n    Federal Tax calculation method\n\n    yearly_income: The early converted 'based on' amount\n\n    eg: yearly_income-> 189000 then taxable_amount-> 39312.0 (yearly)\n    \"\"\"\n\n    def filter_brackets(brackets: list) -> list:\n        \"\"\"\n        This method to filter out the actual brackets/brackets range\n        \"\"\"\n        # brackets that contains actual bracket range, calculated_rate, and diff amount\n        filterd_brackets = []\n        for bracket in brackets:\n            if bracket[\"max\"] > bracket[\"min\"]:\n\n                # bracket: {'rate': 12, 'min': 11000, 'max': 44725}\n\n                # finding diff amount and adding to the bracket\n                bracket[\"diff\"] = bracket[\"max\"] - bracket[\"min\"]\n                # find bracket rate from the difference and adding to bracket\n                bracket[\"calculated_rate\"] = (bracket[\"rate\"] / 100) * bracket[\"diff\"]\n\n                # bracket: {'rate': 12, 'min': 11000, 'max': 44725, 'diff': 33725, 'calculated_rate': 4047.0}\n\n                filterd_brackets.append(bracket)\n                continue\n            # returning valid filtered brackets\n            return filterd_brackets\n        # returning valid filtered brackets\n        return filterd_brackets\n\n    # filter_brackets method/function will sort out the brackets\n\n    # for example for the 189000 yearly income come in the 32% group,\n    # so the final the max considered as min(231250,189000) which is 189000\n    brackets = [\n        {\"rate\": 10, \"min\": 0, \"max\": min(11000, yearly_income)},\n        {\"rate\": 12, \"min\": 11000, \"max\": min(44725, yearly_income)},\n        {\"rate\": 22, \"min\": 44725, \"max\": min(95375, yearly_income)},\n        {\"rate\": 24, \"min\": 95375, \"max\": min(182100, yearly_income)},\n        {\"rate\": 32, \"min\": 182100, \"max\": min(231250, yearly_income)},\n        {\"rate\": 35, \"min\": 231250, \"max\": min(578125, yearly_income)},\n        {\"rate\": 37, \"min\": 578125, \"max\": max(578125, yearly_income)},\n    ]\n\n    # filtering the brackets to actual range\n    brackets = filter_brackets(brackets=brackets)\n\n    # finding yearly taxable amount\n    taxable_amount = sum(bracket[\"calculated_rate\"] for bracket in brackets)\n\n    \"\"\"\n    use formated_result method to print the table\n    \"\"\"\n    # formated_result(brackets=brackets, taxable_amount=taxable_amount)\n\n    # returning the taxable amount later on the yearly taxable amount-\n    # is converted to daily and calculate federal tax for the total days between the\n    # Payslip period\n    return taxable_amount\n\n\ndef formated_result(brackets: dict, taxable_amount: float) -> None:\n    \"\"\"\n    It will print the brackets such a formated way\n    \"\"\"\n    col_width = 7\n    print(\"----------------------Brackets----------------------\")\n    print(\n        f\"|{'Rate':<{col_width}}  |{'Min':<{col_width}} |{'Max':<{col_width}}  |{'Taxable':<{col_width}}  |{'Bracket Tax':<{col_width}} |\"\n    )\n\n    for bracket in brackets:\n        print(\n            f\"|{bracket['rate']:<{col_width}}% |{bracket['min']:<{col_width}} | {bracket['max']:<{col_width}} | {bracket['diff']:<{col_width}} | {round(bracket['calculated_rate'],2):<{col_width + 3}} |\"\n        )\n\n    print(f\"|             YEARLY TAXABLE INCOME    | {taxable_amount}    |\")\n    print(\"----------------------------------------------------\")\n\n\nmonth_taxable = calcluate_federal_tax(YEARLY_TAXABLE_INCOME)\nprint(\"YEARLY TAXABLE AMOUNT\", month_taxable)",
      "description": "",
      "company_id": null
    }
  },
  {
    "model": "payroll.allowance",
    "pk": 1,
    "fields": {
      "created_at": "2024-12-21T08:35:27.289Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "House Rent Allowance (HRA)",
      "one_time_date": null,
      "include_active_employees": true,
      "is_taxable": true,
      "is_condition_based": false,
      "field": null,
      "condition": null,
      "value": null,
      "is_fixed": false,
      "amount": null,
      "based_on": "basic_pay",
      "rate": 4.5,
      "per_attendance_fixed_amount": 0.0,
      "per_children_fixed_amount": 0.0,
      "shift_id": null,
      "shift_per_attendance_amount": 0.0,
      "amount_per_one_hr": 0.0,
      "work_type_id": null,
      "work_type_per_attendance_amount": 0.0,
      "has_max_limit": false,
      "maximum_amount": null,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "gt",
      "if_amount": 0.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": false,
      "is_loan": false,
      "specific_employees": [9, 71, 7, 124, 111, 27, 83, 26, 24, 51, 33, 98],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.allowance",
    "pk": 2,
    "fields": {
      "created_at": "2024-12-21T08:36:39.003Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Meal Allowance",
      "one_time_date": null,
      "include_active_employees": true,
      "is_taxable": true,
      "is_condition_based": false,
      "field": null,
      "condition": null,
      "value": null,
      "is_fixed": false,
      "amount": null,
      "based_on": "work_type_id",
      "rate": null,
      "per_attendance_fixed_amount": 0.0,
      "per_children_fixed_amount": 0.0,
      "shift_id": null,
      "shift_per_attendance_amount": 0.0,
      "amount_per_one_hr": 0.0,
      "work_type_id": 1,
      "work_type_per_attendance_amount": 40.0,
      "has_max_limit": true,
      "maximum_amount": 1500.0,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "gt",
      "if_amount": 0.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": false,
      "is_loan": false,
      "specific_employees": [],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.allowance",
    "pk": 3,
    "fields": {
      "created_at": "2024-12-21T08:37:32.308Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Education Allowance",
      "one_time_date": null,
      "include_active_employees": false,
      "is_taxable": true,
      "is_condition_based": true,
      "field": "children",
      "condition": "lt",
      "value": "3",
      "is_fixed": false,
      "amount": null,
      "based_on": "basic_pay",
      "rate": 10.0,
      "per_attendance_fixed_amount": 0.0,
      "per_children_fixed_amount": 0.0,
      "shift_id": null,
      "shift_per_attendance_amount": 0.0,
      "amount_per_one_hr": 0.0,
      "work_type_id": null,
      "work_type_per_attendance_amount": 0.0,
      "has_max_limit": false,
      "maximum_amount": null,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "gt",
      "if_amount": 0.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": false,
      "is_loan": false,
      "specific_employees": [],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.allowance",
    "pk": 4,
    "fields": {
      "created_at": "2024-12-21T08:40:56.185Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Emergency Loan",
      "one_time_date": "2024-12-10",
      "include_active_employees": false,
      "is_taxable": true,
      "is_condition_based": false,
      "field": null,
      "condition": null,
      "value": null,
      "is_fixed": true,
      "amount": 54000.0,
      "based_on": "basic_pay",
      "rate": null,
      "per_attendance_fixed_amount": 0.0,
      "per_children_fixed_amount": 0.0,
      "shift_id": null,
      "shift_per_attendance_amount": 0.0,
      "amount_per_one_hr": 0.0,
      "work_type_id": null,
      "work_type_per_attendance_amount": 0.0,
      "has_max_limit": false,
      "maximum_amount": null,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "gt",
      "if_amount": 0.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": true,
      "is_loan": true,
      "specific_employees": [13],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.deduction",
    "pk": 1,
    "fields": {
      "created_at": "2024-12-21T08:38:13.177Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Provident Fund (PF)",
      "one_time_date": null,
      "include_active_employees": true,
      "is_tax": false,
      "is_pretax": true,
      "is_condition_based": false,
      "field": null,
      "condition": null,
      "value": null,
      "update_compensation": null,
      "is_fixed": false,
      "amount": null,
      "based_on": "basic_pay",
      "rate": 12.0,
      "employer_rate": 0.0,
      "has_max_limit": false,
      "maximum_amount": null,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "gt",
      "if_amount": 0.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": false,
      "is_installment": false,
      "specific_employees": [],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.deduction",
    "pk": 2,
    "fields": {
      "created_at": "2024-12-21T08:38:56.869Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Professional Tax",
      "one_time_date": null,
      "include_active_employees": true,
      "is_tax": false,
      "is_pretax": true,
      "is_condition_based": false,
      "field": null,
      "condition": null,
      "value": null,
      "update_compensation": null,
      "is_fixed": false,
      "amount": null,
      "based_on": "basic_pay",
      "rate": 2.0,
      "employer_rate": 0.0,
      "has_max_limit": false,
      "maximum_amount": null,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "gt",
      "if_amount": 23000.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": false,
      "is_installment": false,
      "specific_employees": [],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.deduction",
    "pk": 3,
    "fields": {
      "created_at": "2024-12-21T08:39:35.476Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "ESI",
      "one_time_date": null,
      "include_active_employees": true,
      "is_tax": false,
      "is_pretax": true,
      "is_condition_based": false,
      "field": null,
      "condition": null,
      "value": null,
      "update_compensation": null,
      "is_fixed": false,
      "amount": null,
      "based_on": "basic_pay",
      "rate": 0.75,
      "employer_rate": 2.25,
      "has_max_limit": false,
      "maximum_amount": null,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "lt",
      "if_amount": 21000.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": false,
      "is_installment": false,
      "specific_employees": [],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.deduction",
    "pk": 4,
    "fields": {
      "created_at": "2024-12-21T08:40:56.257Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Emergency Loan - 2024-12-01",
      "one_time_date": "2024-12-01",
      "include_active_employees": false,
      "is_tax": false,
      "is_pretax": true,
      "is_condition_based": false,
      "field": null,
      "condition": null,
      "value": null,
      "update_compensation": null,
      "is_fixed": true,
      "amount": 3000.0,
      "based_on": null,
      "rate": 0.0,
      "employer_rate": 0.0,
      "has_max_limit": false,
      "maximum_amount": null,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "gt",
      "if_amount": 0.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": true,
      "is_installment": true,
      "specific_employees": [13],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.deduction",
    "pk": 5,
    "fields": {
      "created_at": "2024-12-21T08:40:56.311Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Emergency Loan - 2024-12-01",
      "one_time_date": "2024-12-01",
      "include_active_employees": false,
      "is_tax": false,
      "is_pretax": true,
      "is_condition_based": false,
      "field": null,
      "condition": null,
      "value": null,
      "update_compensation": null,
      "is_fixed": true,
      "amount": 3000.0,
      "based_on": null,
      "rate": 0.0,
      "employer_rate": 0.0,
      "has_max_limit": false,
      "maximum_amount": null,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "gt",
      "if_amount": 0.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": true,
      "is_installment": true,
      "specific_employees": [13],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.deduction",
    "pk": 6,
    "fields": {
      "created_at": "2024-12-21T08:40:56.359Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Emergency Loan - 2025-01-01",
      "one_time_date": "2025-01-01",
      "include_active_employees": false,
      "is_tax": false,
      "is_pretax": true,
      "is_condition_based": false,
      "field": null,
      "condition": null,
      "value": null,
      "update_compensation": null,
      "is_fixed": true,
      "amount": 3000.0,
      "based_on": null,
      "rate": 0.0,
      "employer_rate": 0.0,
      "has_max_limit": false,
      "maximum_amount": null,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "gt",
      "if_amount": 0.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": true,
      "is_installment": true,
      "specific_employees": [13],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.deduction",
    "pk": 7,
    "fields": {
      "created_at": "2024-12-21T08:40:56.407Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Emergency Loan - 2025-02-01",
      "one_time_date": "2025-02-01",
      "include_active_employees": false,
      "is_tax": false,
      "is_pretax": true,
      "is_condition_based": false,
      "field": null,
      "condition": null,
      "value": null,
      "update_compensation": null,
      "is_fixed": true,
      "amount": 3000.0,
      "based_on": null,
      "rate": 0.0,
      "employer_rate": 0.0,
      "has_max_limit": false,
      "maximum_amount": null,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "gt",
      "if_amount": 0.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": true,
      "is_installment": true,
      "specific_employees": [13],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.deduction",
    "pk": 8,
    "fields": {
      "created_at": "2024-12-21T08:40:56.455Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Emergency Loan - 2025-03-01",
      "one_time_date": "2025-03-01",
      "include_active_employees": false,
      "is_tax": false,
      "is_pretax": true,
      "is_condition_based": false,
      "field": null,
      "condition": null,
      "value": null,
      "update_compensation": null,
      "is_fixed": true,
      "amount": 3000.0,
      "based_on": null,
      "rate": 0.0,
      "employer_rate": 0.0,
      "has_max_limit": false,
      "maximum_amount": null,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "gt",
      "if_amount": 0.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": true,
      "is_installment": true,
      "specific_employees": [13],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.deduction",
    "pk": 9,
    "fields": {
      "created_at": "2024-12-21T08:40:56.506Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Emergency Loan - 2025-04-01",
      "one_time_date": "2025-04-01",
      "include_active_employees": false,
      "is_tax": false,
      "is_pretax": true,
      "is_condition_based": false,
      "field": null,
      "condition": null,
      "value": null,
      "update_compensation": null,
      "is_fixed": true,
      "amount": 3000.0,
      "based_on": null,
      "rate": 0.0,
      "employer_rate": 0.0,
      "has_max_limit": false,
      "maximum_amount": null,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "gt",
      "if_amount": 0.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": true,
      "is_installment": true,
      "specific_employees": [13],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.deduction",
    "pk": 10,
    "fields": {
      "created_at": "2024-12-21T08:40:56.557Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Emergency Loan - 2025-05-01",
      "one_time_date": "2025-05-01",
      "include_active_employees": false,
      "is_tax": false,
      "is_pretax": true,
      "is_condition_based": false,
      "field": null,
      "condition": null,
      "value": null,
      "update_compensation": null,
      "is_fixed": true,
      "amount": 3000.0,
      "based_on": null,
      "rate": 0.0,
      "employer_rate": 0.0,
      "has_max_limit": false,
      "maximum_amount": null,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "gt",
      "if_amount": 0.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": true,
      "is_installment": true,
      "specific_employees": [13],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.deduction",
    "pk": 11,
    "fields": {
      "created_at": "2024-12-21T08:40:56.608Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Emergency Loan - 2025-06-01",
      "one_time_date": "2025-06-01",
      "include_active_employees": false,
      "is_tax": false,
      "is_pretax": true,
      "is_condition_based": false,
      "field": null,
      "condition": null,
      "value": null,
      "update_compensation": null,
      "is_fixed": true,
      "amount": 3000.0,
      "based_on": null,
      "rate": 0.0,
      "employer_rate": 0.0,
      "has_max_limit": false,
      "maximum_amount": null,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "gt",
      "if_amount": 0.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": true,
      "is_installment": true,
      "specific_employees": [13],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.deduction",
    "pk": 12,
    "fields": {
      "created_at": "2024-12-21T08:40:56.657Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Emergency Loan - 2025-07-01",
      "one_time_date": "2025-07-01",
      "include_active_employees": false,
      "is_tax": false,
      "is_pretax": true,
      "is_condition_based": false,
      "field": null,
      "condition": null,
      "value": null,
      "update_compensation": null,
      "is_fixed": true,
      "amount": 3000.0,
      "based_on": null,
      "rate": 0.0,
      "employer_rate": 0.0,
      "has_max_limit": false,
      "maximum_amount": null,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "gt",
      "if_amount": 0.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": true,
      "is_installment": true,
      "specific_employees": [13],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.deduction",
    "pk": 13,
    "fields": {
      "created_at": "2024-12-21T08:40:56.708Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Emergency Loan - 2025-08-01",
      "one_time_date": "2025-08-01",
      "include_active_employees": false,
      "is_tax": false,
      "is_pretax": true,
      "is_condition_based": false,
      "field": null,
      "condition": null,
      "value": null,
      "update_compensation": null,
      "is_fixed": true,
      "amount": 3000.0,
      "based_on": null,
      "rate": 0.0,
      "employer_rate": 0.0,
      "has_max_limit": false,
      "maximum_amount": null,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "gt",
      "if_amount": 0.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": true,
      "is_installment": true,
      "specific_employees": [13],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.deduction",
    "pk": 14,
    "fields": {
      "created_at": "2024-12-21T08:40:56.758Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Emergency Loan - 2025-12-01",
      "one_time_date": "2025-12-01",
      "include_active_employees": false,
      "is_tax": false,
      "is_pretax": true,
      "is_condition_based": false,
      "field": null,
      "condition": null,
      "value": null,
      "update_compensation": null,
      "is_fixed": true,
      "amount": 3000.0,
      "based_on": null,
      "rate": 0.0,
      "employer_rate": 0.0,
      "has_max_limit": false,
      "maximum_amount": null,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "gt",
      "if_amount": 0.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": true,
      "is_installment": true,
      "specific_employees": [13],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.deduction",
    "pk": 15,
    "fields": {
      "created_at": "2024-12-21T08:40:56.822Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Emergency Loan - 2025-10-01",
      "one_time_date": "2025-10-01",
      "include_active_employees": false,
      "is_tax": false,
      "is_pretax": true,
      "is_condition_based": false,
      "field": null,
      "condition": null,
      "value": null,
      "update_compensation": null,
      "is_fixed": true,
      "amount": 3000.0,
      "based_on": null,
      "rate": 0.0,
      "employer_rate": 0.0,
      "has_max_limit": false,
      "maximum_amount": null,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "gt",
      "if_amount": 0.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": true,
      "is_installment": true,
      "specific_employees": [13],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.deduction",
    "pk": 16,
    "fields": {
      "created_at": "2024-12-21T08:40:56.903Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Emergency Loan - 2025-12-01",
      "one_time_date": "2025-12-01",
      "include_active_employees": false,
      "is_tax": false,
      "is_pretax": true,
      "is_condition_based": false,
      "field": null,
      "condition": null,
      "value": null,
      "update_compensation": null,
      "is_fixed": true,
      "amount": 3000.0,
      "based_on": null,
      "rate": 0.0,
      "employer_rate": 0.0,
      "has_max_limit": false,
      "maximum_amount": null,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "gt",
      "if_amount": 0.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": true,
      "is_installment": true,
      "specific_employees": [13],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.deduction",
    "pk": 17,
    "fields": {
      "created_at": "2024-12-21T08:40:56.970Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Emergency Loan - 2025-12-01",
      "one_time_date": "2025-12-01",
      "include_active_employees": false,
      "is_tax": false,
      "is_pretax": true,
      "is_condition_based": false,
      "field": null,
      "condition": null,
      "value": null,
      "update_compensation": null,
      "is_fixed": true,
      "amount": 3000.0,
      "based_on": null,
      "rate": 0.0,
      "employer_rate": 0.0,
      "has_max_limit": false,
      "maximum_amount": null,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "gt",
      "if_amount": 0.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": true,
      "is_installment": true,
      "specific_employees": [13],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.deduction",
    "pk": 18,
    "fields": {
      "created_at": "2024-12-21T08:40:57.023Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Emergency Loan - 2026-01-01",
      "one_time_date": "2026-01-01",
      "include_active_employees": false,
      "is_tax": false,
      "is_pretax": true,
      "is_condition_based": false,
      "field": null,
      "condition": null,
      "value": null,
      "update_compensation": null,
      "is_fixed": true,
      "amount": 3000.0,
      "based_on": null,
      "rate": 0.0,
      "employer_rate": 0.0,
      "has_max_limit": false,
      "maximum_amount": null,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "gt",
      "if_amount": 0.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": true,
      "is_installment": true,
      "specific_employees": [13],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.deduction",
    "pk": 19,
    "fields": {
      "created_at": "2024-12-21T08:40:57.089Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Emergency Loan - 2026-02-01",
      "one_time_date": "2026-02-01",
      "include_active_employees": false,
      "is_tax": false,
      "is_pretax": true,
      "is_condition_based": false,
      "field": null,
      "condition": null,
      "value": null,
      "update_compensation": null,
      "is_fixed": true,
      "amount": 3000.0,
      "based_on": null,
      "rate": 0.0,
      "employer_rate": 0.0,
      "has_max_limit": false,
      "maximum_amount": null,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "gt",
      "if_amount": 0.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": true,
      "is_installment": true,
      "specific_employees": [13],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.deduction",
    "pk": 20,
    "fields": {
      "created_at": "2024-12-21T08:40:57.139Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Emergency Loan - 2026-03-01",
      "one_time_date": "2026-03-01",
      "include_active_employees": false,
      "is_tax": false,
      "is_pretax": true,
      "is_condition_based": false,
      "field": null,
      "condition": null,
      "value": null,
      "update_compensation": null,
      "is_fixed": true,
      "amount": 3000.0,
      "based_on": null,
      "rate": 0.0,
      "employer_rate": 0.0,
      "has_max_limit": false,
      "maximum_amount": null,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "gt",
      "if_amount": 0.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": true,
      "is_installment": true,
      "specific_employees": [13],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.deduction",
    "pk": 21,
    "fields": {
      "created_at": "2024-12-21T08:40:57.185Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Emergency Loan - 2026-04-01",
      "one_time_date": "2026-04-01",
      "include_active_employees": false,
      "is_tax": false,
      "is_pretax": true,
      "is_condition_based": false,
      "field": null,
      "condition": null,
      "value": null,
      "update_compensation": null,
      "is_fixed": true,
      "amount": 3000.0,
      "based_on": null,
      "rate": 0.0,
      "employer_rate": 0.0,
      "has_max_limit": false,
      "maximum_amount": null,
      "maximum_unit": "month_working_days",
      "if_choice": "basic_pay",
      "if_condition": "gt",
      "if_amount": 0.0,
      "start_range": null,
      "end_range": null,
      "company_id": null,
      "only_show_under_employee": true,
      "is_installment": true,
      "specific_employees": [13],
      "exclude_employees": [],
      "other_conditions": []
    }
  },
  {
    "model": "payroll.reimbursementmultipleattachment",
    "pk": 1,
    "fields": { "attachment": "payroll/reimbursements/Passport.pdf" }
  },
  {
    "model": "payroll.reimbursement",
    "pk": 1,
    "fields": {
      "created_at": "2024-12-21T08:42:06.139Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Reimbursment For Travel",
      "type": "reimbursement",
      "employee_id": 11,
      "allowance_on": "2024-12-01",
      "attachment": "payroll/reimbursements/Passport_yHUaQ2e.pdf",
      "ad_to_encash": 0.0,
      "cfd_to_encash": 0.0,
      "bonus_to_encash": 0,
      "amount": 2000.0,
      "status": "requested",
      "approved_by": null,
      "description": "Request for travels amount reimbursment",
      "allowance_id": null,
      "other_attachments": [1]
    }
  },
  {
    "model": "payroll.payrollsettings",
    "pk": 1,
    "fields": {
      "created_at": "2024-12-21T07:16:03.794Z",
      "created_by": null,
      "modified_by": null,
      "is_active": true,
      "currency_symbol": "$",
      "position": "postfix",
      "company_id": null
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 1,
    "fields": {
      "created_at": "2024-12-21T08:44:26.050Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 1,
      "min_income": 0.0,
      "max_income": 11600.0,
      "tax_rate": 10.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 2,
    "fields": {
      "created_at": "2024-12-21T08:44:36.408Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 1,
      "min_income": 11601.0,
      "max_income": 47150.0,
      "tax_rate": 12.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 3,
    "fields": {
      "created_at": "2024-12-21T08:44:45.023Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 1,
      "min_income": 47151.0,
      "max_income": 100525.0,
      "tax_rate": 22.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 4,
    "fields": {
      "created_at": "2024-12-21T08:45:07.251Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 1,
      "min_income": 100526.0,
      "max_income": 191950.0,
      "tax_rate": 24.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 5,
    "fields": {
      "created_at": "2024-12-21T08:45:28.220Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 1,
      "min_income": 191951.0,
      "max_income": 243725.0,
      "tax_rate": 32.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 6,
    "fields": {
      "created_at": "2024-12-21T08:45:42.610Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 1,
      "min_income": 243726.0,
      "max_income": 609350.0,
      "tax_rate": 35.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 7,
    "fields": {
      "created_at": "2024-12-21T08:45:58.234Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 1,
      "min_income": 609351.0,
      "max_income": Infinity,
      "tax_rate": 37.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 8,
    "fields": {
      "created_at": "2024-12-21T08:46:40.497Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 2,
      "min_income": 0.0,
      "max_income": 11600.0,
      "tax_rate": 10.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 9,
    "fields": {
      "created_at": "2024-12-21T08:46:49.039Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 2,
      "min_income": 11601.0,
      "max_income": 47150.0,
      "tax_rate": 12.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 10,
    "fields": {
      "created_at": "2024-12-21T08:46:59.265Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 2,
      "min_income": 47151.0,
      "max_income": 100525.0,
      "tax_rate": 22.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 11,
    "fields": {
      "created_at": "2024-12-21T08:47:12.204Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 2,
      "min_income": 100526.0,
      "max_income": 191950.0,
      "tax_rate": 24.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 12,
    "fields": {
      "created_at": "2024-12-21T08:47:26.068Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 2,
      "min_income": 191951.0,
      "max_income": 243725.0,
      "tax_rate": 32.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 13,
    "fields": {
      "created_at": "2024-12-21T08:47:40.309Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 2,
      "min_income": 243726.0,
      "max_income": 365600.0,
      "tax_rate": 35.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 14,
    "fields": {
      "created_at": "2024-12-21T08:47:48.308Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 2,
      "min_income": 365601.0,
      "max_income": Infinity,
      "tax_rate": 37.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 15,
    "fields": {
      "created_at": "2024-12-21T08:48:13.578Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 3,
      "min_income": 0.0,
      "max_income": 23200.0,
      "tax_rate": 10.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 16,
    "fields": {
      "created_at": "2024-12-21T08:48:22.948Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 3,
      "min_income": 23201.0,
      "max_income": 94300.0,
      "tax_rate": 12.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 17,
    "fields": {
      "created_at": "2024-12-21T08:48:38.104Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 3,
      "min_income": 94301.0,
      "max_income": 201050.0,
      "tax_rate": 22.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 18,
    "fields": {
      "created_at": "2024-12-21T08:48:52.625Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 3,
      "min_income": 201051.0,
      "max_income": 383900.0,
      "tax_rate": 24.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 19,
    "fields": {
      "created_at": "2024-12-21T08:49:09.192Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 3,
      "min_income": 383901.0,
      "max_income": 487450.0,
      "tax_rate": 32.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 20,
    "fields": {
      "created_at": "2024-12-21T08:49:23.918Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 3,
      "min_income": 487451.0,
      "max_income": 731200.0,
      "tax_rate": 35.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 21,
    "fields": {
      "created_at": "2024-12-21T08:49:32.982Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 3,
      "min_income": 731201.0,
      "max_income": Infinity,
      "tax_rate": 37.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 22,
    "fields": {
      "created_at": "2024-12-21T08:49:55.138Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 4,
      "min_income": 0.0,
      "max_income": 16550.0,
      "tax_rate": 10.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 23,
    "fields": {
      "created_at": "2024-12-21T08:50:07.112Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 4,
      "min_income": 16551.0,
      "max_income": 63100.0,
      "tax_rate": 12.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 24,
    "fields": {
      "created_at": "2024-12-21T08:50:16.831Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 4,
      "min_income": 63101.0,
      "max_income": 100500.0,
      "tax_rate": 22.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 25,
    "fields": {
      "created_at": "2024-12-21T08:50:44.001Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 4,
      "min_income": 100501.0,
      "max_income": 191950.0,
      "tax_rate": 24.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 26,
    "fields": {
      "created_at": "2024-12-21T08:50:56.700Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 4,
      "min_income": 191951.0,
      "max_income": 243700.0,
      "tax_rate": 32.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 27,
    "fields": {
      "created_at": "2024-12-21T08:51:10.920Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 4,
      "min_income": 243701.0,
      "max_income": 609350.0,
      "tax_rate": 35.0
    }
  },
  {
    "model": "payroll.taxbracket",
    "pk": 28,
    "fields": {
      "created_at": "2024-12-21T08:51:25.104Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "filing_status_id": 4,
      "min_income": 609351.0,
      "max_income": Infinity,
      "tax_rate": 37.0
    }
  },
  {
    "model": "payroll.reimbursement",
    "pk": 1,
    "fields": {
      "created_at": "2024-12-21T08:42:06.139Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Reimbursment For Travel",
      "type": "reimbursement",
      "employee_id": 11,
      "allowance_on": "2024-12-01",
      "attachment": "payroll/reimbursements/Passport_yHUaQ2e.pdf",
      "ad_to_encash": 0.0,
      "cfd_to_encash": 0.0,
      "bonus_to_encash": 0,
      "amount": 2000.0,
      "status": "requested",
      "description": "Request for travels amount reimbursment"
    }
  },
  {
    "model": "payroll.reimbursement",
    "pk": 2,
    "fields": {
      "created_at": "2024-10-15T04:38:48.945Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Transportation Cost",
      "type": "reimbursement",
      "employee_id": 28,
      "allowance_on": "2024-10-17",
      "attachment": "payroll/reimbursements/Multiple_Approvals_1Q5Ce9r.png",
      "ad_to_encash": 0.0,
      "cfd_to_encash": 0.0,
      "bonus_to_encash": 0,
      "amount": 100.0,
      "status": "requested",
      "description": "Transportation cost for client meeting (taxi fare to and from office to clientÆs location)."
    }
  },
  {
    "model": "payroll.reimbursement",
    "pk": 3,
    "fields": {
      "created_at": "2024-10-15T04:39:28.342Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Conference registratio",
      "type": "reimbursement",
      "employee_id": 19,
      "allowance_on": "2024-10-18",
      "attachment": "payroll/reimbursements/Cosec_TgVWkpp.png",
      "ad_to_encash": 0.0,
      "cfd_to_encash": 0.0,
      "bonus_to_encash": 0,
      "amount": 1200.0,
      "status": "requested",
      "description": "Conference registration fee for DjangoCon 2024 (online workshop)."
    }
  },
  {
    "model": "payroll.reimbursement",
    "pk": 4,
    "fields": {
      "created_at": "2024-10-15T04:39:56.670Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Lunch with client",
      "type": "reimbursement",
      "employee_id": 22,
      "allowance_on": "2024-10-15",
      "attachment": "payroll/reimbursements/Mutliple_Approval_Form_gcX4pnl.png",
      "ad_to_encash": 0.0,
      "cfd_to_encash": 0.0,
      "bonus_to_encash": 0,
      "amount": 300.0,
      "status": "requested",
      "description": "Lunch with client (meal expenses incurred during project discussion with ABC Corp)."
    }
  },
  {
    "model": "payroll.reimbursement",
    "pk": 5,
    "fields": {
      "created_at": "2024-10-15T04:40:31.350Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "title": "Software license",
      "type": "reimbursement",
      "employee_id": 19,
      "allowance_on": "2024-10-15",
      "attachment": "payroll/reimbursements/Horilla_2_PLf7NkW.png",
      "ad_to_encash": 0.0,
      "cfd_to_encash": 0.0,
      "bonus_to_encash": 0,
      "amount": 2500.0,
      "status": "requested",
      "description": "Software license for Sublime Text (1-year subscription for team development)."
    }
  },
  {
    "model": "payroll.loanaccount",
    "pk": 1,
    "fields": {
      "created_at": "2024-12-12T09:45:26.097Z",
      "created_by": 1,
      "modified_by": 1,
      "is_active": true,
      "type": "loan",
      "title": "Medical Loan",
      "employee_id": 18,
      "loan_amount": 60000.0,
      "provided_date": "2024-12-01",
      "allowance_id": 5,
      "description": "Loan for parents medical case",
      "is_fixed": true,
      "rate": 0.0,
      "installment_amount": 5000.0,
      "installments": 12,
      "installment_start_date": "2025-01-01",
      "apply_on": "end_of_month",
      "settled": false,
      "settled_date": null,
      "asset_id": null,
      "deduction_ids": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
    }
  }
]
