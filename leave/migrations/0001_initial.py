# Generated by Django 5.2.7 on 2025-10-25 14:02

import django.db.models.deletion
import django.utils.timezone
import horilla.models
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("attendance", "0001_initial"),
        ("base", "0001_initial"),
        ("employee", "0001_initial"),
        ("horilla_audit", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="LeaveRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                ("start_date", models.DateField(verbose_name="Start Date")),
                (
                    "start_date_breakdown",
                    models.CharField(
                        choices=[
                            ("full_day", "Full Day"),
                            ("first_half", "First Half"),
                            ("second_half", "Second Half"),
                        ],
                        default="full_day",
                        max_length=30,
                        verbose_name="Start Date Breakdown",
                    ),
                ),
                (
                    "end_date",
                    models.DateField(blank=True, null=True, verbose_name="End Date"),
                ),
                (
                    "end_date_breakdown",
                    models.CharField(
                        choices=[
                            ("full_day", "Full Day"),
                            ("first_half", "First Half"),
                            ("second_half", "Second Half"),
                        ],
                        default="full_day",
                        max_length=30,
                        verbose_name="End Date Breakdown",
                    ),
                ),
                (
                    "requested_days",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Requested Days"
                    ),
                ),
                (
                    "leave_clashes_count",
                    models.IntegerField(default=0, verbose_name="Leave Clashes Count"),
                ),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "attachment",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=horilla.models.upload_path,
                        verbose_name="Attachment",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("requested", "Requested"),
                            ("approved", "Approved"),
                            ("cancelled", "Cancelled"),
                            ("rejected", "Rejected"),
                        ],
                        default="requested",
                        max_length=30,
                        verbose_name="Status",
                    ),
                ),
                (
                    "requested_date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="Created Date"
                    ),
                ),
                ("approved_available_days", models.FloatField(default=0)),
                ("approved_carryforward_days", models.FloatField(default=0)),
                (
                    "reject_reason",
                    models.TextField(
                        blank=True, max_length=255, verbose_name="Reject Reason"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="leave_request_created",
                        to="employee.employee",
                        verbose_name="Created By",
                    ),
                ),
                (
                    "employee_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="employee.employee",
                        verbose_name="Employee",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Leave Request",
                "verbose_name_plural": "Leave Requests",
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="LeaverequestFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.FileField(upload_to=horilla.models.upload_path)),
            ],
        ),
        migrations.CreateModel(
            name="AvailableLeave",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "available_days",
                    models.FloatField(default=0, verbose_name="Available Days"),
                ),
                (
                    "carryforward_days",
                    models.FloatField(default=0, verbose_name="Carryforward Days"),
                ),
                (
                    "total_leave_days",
                    models.FloatField(default=0, verbose_name="Total Leave Days"),
                ),
                (
                    "assigned_date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="Assigned Date"
                    ),
                ),
                (
                    "reset_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Leave Reset Date"
                    ),
                ),
                (
                    "expired_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="CarryForward Expired Date"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "employee_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="available_leave",
                        to="employee.employee",
                        verbose_name="Employee",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CompensatoryLeaveRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                ("requested_days", models.FloatField(blank=True, null=True)),
                ("requested_date", models.DateField(default=django.utils.timezone.now)),
                ("description", models.TextField(max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("requested", "Requested"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="requested",
                        max_length=30,
                    ),
                ),
                ("reject_reason", models.TextField(blank=True, max_length=255)),
                (
                    "attendance_id",
                    models.ManyToManyField(
                        to="attendance.attendance", verbose_name="Attendance"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "employee_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="employee.employee",
                        verbose_name="Employee",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
            ],
            options={
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="EmployeePastLeaveRestrict",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                ("enabled", models.BooleanField(default=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Holiday",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                ("name", models.CharField(max_length=30, verbose_name="Name")),
                ("start_date", models.DateField(verbose_name="Start Date")),
                (
                    "end_date",
                    models.DateField(blank=True, null=True, verbose_name="End Date"),
                ),
                (
                    "recurring",
                    models.BooleanField(default=False, verbose_name="Recurring"),
                ),
                (
                    "company_id",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="base.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LeaveAllocationRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "requested_days",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Requested days"
                    ),
                ),
                ("requested_date", models.DateField(default=django.utils.timezone.now)),
                (
                    "attachment",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=horilla.models.upload_path,
                        verbose_name="Attachment",
                    ),
                ),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("requested", "Requested"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="requested",
                        max_length=30,
                    ),
                ),
                ("reject_reason", models.TextField(blank=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "employee_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="employee.employee",
                        verbose_name="Employee",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Leave Allocation Request",
                "verbose_name_plural": "Leave Allocation Requests",
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="LeaveGeneralSetting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                ("compensatory_leave", models.BooleanField(default=True)),
                (
                    "company_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OverrideLeaveRequests",
            fields=[
                (
                    "leaverequest_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="leave.leaverequest",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("leave.leaverequest",),
        ),
        migrations.CreateModel(
            name="LeaveRequestConditionApproval",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sequence", models.IntegerField()),
                ("is_approved", models.BooleanField(default=False)),
                ("is_rejected", models.BooleanField(default=False)),
                (
                    "leave_request_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="leave.leaverequest",
                    ),
                ),
                (
                    "manager_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="employee.employee",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LeaverequestComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "comment",
                    models.TextField(max_length=255, null=True, verbose_name="Comment"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "employee_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="employee.employee",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
                (
                    "request_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="leave.leaverequest",
                    ),
                ),
                (
                    "files",
                    models.ManyToManyField(blank=True, to="leave.leaverequestfile"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LeaveallocationrequestComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "comment",
                    models.TextField(max_length=255, null=True, verbose_name="Comment"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "employee_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="employee.employee",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
                (
                    "request_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="leave.leaveallocationrequest",
                    ),
                ),
                (
                    "files",
                    models.ManyToManyField(blank=True, to="leave.leaverequestfile"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CompensatoryLeaverequestComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "comment",
                    models.TextField(max_length=255, null=True, verbose_name="Comment"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "employee_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="employee.employee",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
                (
                    "request_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="leave.compensatoryleaverequest",
                    ),
                ),
                (
                    "files",
                    models.ManyToManyField(blank=True, to="leave.leaverequestfile"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LeaveType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "icon",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=horilla.models.upload_path,
                        verbose_name="Icon",
                    ),
                ),
                ("name", models.CharField(max_length=30, verbose_name="Name")),
                (
                    "color",
                    models.CharField(max_length=30, null=True, verbose_name="Color"),
                ),
                (
                    "payment",
                    models.CharField(
                        choices=[("paid", "Paid"), ("unpaid", "Unpaid")],
                        default="unpaid",
                        max_length=30,
                        verbose_name="Is Paid",
                    ),
                ),
                ("count", models.FloatField(default=1, null=True)),
                (
                    "period_in",
                    models.CharField(
                        choices=[("day", "Day"), ("month", "Month"), ("year", "Year")],
                        default="day",
                        max_length=30,
                    ),
                ),
                (
                    "limit_leave",
                    models.BooleanField(default=True, verbose_name="Limit Leave Days"),
                ),
                ("total_days", models.FloatField(default=1, null=True)),
                ("reset", models.BooleanField(default=False, verbose_name="Reset")),
                (
                    "is_encashable",
                    models.BooleanField(default=False, verbose_name="Is Encashable"),
                ),
                (
                    "reset_based",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("yearly", "Yearly"),
                            ("monthly", "Monthly"),
                            ("weekly", "Weekly"),
                        ],
                        max_length=30,
                        null=True,
                        verbose_name="Reset Period",
                    ),
                ),
                (
                    "reset_month",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Jan"),
                            ("2", "Feb"),
                            ("3", "Mar"),
                            ("4", "Apr"),
                            ("5", "May"),
                            ("6", "Jun"),
                            ("7", "Jul"),
                            ("8", "Aug"),
                            ("9", "Sep"),
                            ("10", "Oct"),
                            ("11", "Nov"),
                            ("12", "Dec"),
                        ],
                        max_length=30,
                        verbose_name="Reset Month",
                    ),
                ),
                (
                    "reset_day",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("last day", "Last Day"),
                            ("1", "1st"),
                            ("2", "2nd"),
                            ("3", "3rd"),
                            ("4", "4th"),
                            ("5", "5th"),
                            ("6", "6th"),
                            ("7", "7th"),
                            ("8", "8th"),
                            ("9", "9th"),
                            ("10", "10th"),
                            ("11", "11th"),
                            ("12", "12th"),
                            ("13", "13th"),
                            ("14", "14th"),
                            ("15", "15th"),
                            ("16", "16th"),
                            ("17", "17th"),
                            ("18", "18th"),
                            ("19", "19th"),
                            ("20", "20th"),
                            ("21", "21th"),
                            ("22", "22th"),
                            ("23", "23th"),
                            ("24", "24th"),
                            ("25", "25th"),
                            ("26", "26th"),
                            ("27", "27th"),
                            ("28", "28th"),
                            ("29", "29th"),
                            ("30", "30th"),
                            ("31", "31th"),
                        ],
                        max_length=30,
                        null=True,
                        verbose_name="Reset Day",
                    ),
                ),
                (
                    "reset_weekend",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Monday"),
                            ("1", "Tuesday"),
                            ("2", "Wednesday"),
                            ("3", "Thursday"),
                            ("4", "Friday"),
                            ("5", "Saturday"),
                            ("6", "Sunday"),
                        ],
                        max_length=10,
                        null=True,
                        verbose_name="Reset Weekday",
                    ),
                ),
                (
                    "carryforward_type",
                    models.CharField(
                        choices=[
                            ("no carryforward", "No Carry Forward"),
                            ("carryforward", "Carry Forward"),
                            ("carryforward expire", "Carry Forward with Expire"),
                        ],
                        default="no carryforward",
                        max_length=30,
                        verbose_name="Carryforward Type",
                    ),
                ),
                (
                    "carryforward_max",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Carryforward Max"
                    ),
                ),
                (
                    "carryforward_expire_in",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Carryforward Expire In"
                    ),
                ),
                (
                    "carryforward_expire_period",
                    models.CharField(
                        blank=True,
                        choices=[("day", "Day"), ("month", "Month"), ("year", "Year")],
                        max_length=30,
                        null=True,
                        verbose_name="Carryforward Expire Period",
                    ),
                ),
                (
                    "carryforward_expire_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Carryforward Expire Date"
                    ),
                ),
                (
                    "require_approval",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        default="yes",
                        max_length=30,
                        null=True,
                        verbose_name="Require Approval",
                    ),
                ),
                (
                    "require_attachment",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        default="no",
                        max_length=30,
                        null=True,
                        verbose_name="Require Attachment",
                    ),
                ),
                (
                    "exclude_company_leave",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        default="no",
                        max_length=30,
                        verbose_name="Exclude Company Holidays",
                    ),
                ),
                (
                    "exclude_holiday",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        default="no",
                        max_length=30,
                        verbose_name="Exclude Holidays",
                    ),
                ),
                ("is_compensatory_leave", models.BooleanField(default=False)),
                (
                    "company_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="base.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
            ],
            options={
                "ordering": ["-id"],
            },
        ),
        migrations.AddField(
            model_name="leaverequest",
            name="leave_type_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="leave.leavetype",
                verbose_name="Leave Type",
            ),
        ),
        migrations.AddField(
            model_name="leaveallocationrequest",
            name="leave_type_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="leave.leavetype",
                verbose_name="Leave type",
            ),
        ),
        migrations.CreateModel(
            name="HistoricalLeaveRequest",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "history_title",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("history_description", models.TextField(null=True)),
                ("history_highlight", models.BooleanField(default=False, null=True)),
                ("start_date", models.DateField(verbose_name="Start Date")),
                (
                    "start_date_breakdown",
                    models.CharField(
                        choices=[
                            ("full_day", "Full Day"),
                            ("first_half", "First Half"),
                            ("second_half", "Second Half"),
                        ],
                        default="full_day",
                        max_length=30,
                        verbose_name="Start Date Breakdown",
                    ),
                ),
                (
                    "end_date",
                    models.DateField(blank=True, null=True, verbose_name="End Date"),
                ),
                (
                    "end_date_breakdown",
                    models.CharField(
                        choices=[
                            ("full_day", "Full Day"),
                            ("first_half", "First Half"),
                            ("second_half", "Second Half"),
                        ],
                        default="full_day",
                        max_length=30,
                        verbose_name="End Date Breakdown",
                    ),
                ),
                (
                    "requested_days",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Requested Days"
                    ),
                ),
                (
                    "leave_clashes_count",
                    models.IntegerField(default=0, verbose_name="Leave Clashes Count"),
                ),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "attachment",
                    models.TextField(
                        blank=True, max_length=100, null=True, verbose_name="Attachment"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("requested", "Requested"),
                            ("approved", "Approved"),
                            ("cancelled", "Cancelled"),
                            ("rejected", "Rejected"),
                        ],
                        default="requested",
                        max_length=30,
                        verbose_name="Status",
                    ),
                ),
                (
                    "requested_date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="Created Date"
                    ),
                ),
                ("approved_available_days", models.FloatField(default=0)),
                ("approved_carryforward_days", models.FloatField(default=0)),
                (
                    "reject_reason",
                    models.TextField(
                        blank=True, max_length=255, verbose_name="Reject Reason"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="employee.employee",
                        verbose_name="Created By",
                    ),
                ),
                (
                    "employee_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="employee.employee",
                        verbose_name="Employee",
                    ),
                ),
                ("history_tags", models.ManyToManyField(to="horilla_audit.audittag")),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
                (
                    "history_relation",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="history_set",
                        to="leave.leaverequest",
                    ),
                ),
                (
                    "leave_type_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="leave.leavetype",
                        verbose_name="Leave Type",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Leave Request",
                "verbose_name_plural": "historical Leave Requests",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalLeaveAllocationRequest",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "history_title",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("history_description", models.TextField(null=True)),
                ("history_highlight", models.BooleanField(default=False, null=True)),
                (
                    "requested_days",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Requested days"
                    ),
                ),
                ("requested_date", models.DateField(default=django.utils.timezone.now)),
                (
                    "attachment",
                    models.TextField(
                        blank=True, max_length=100, null=True, verbose_name="Attachment"
                    ),
                ),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("requested", "Requested"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="requested",
                        max_length=30,
                    ),
                ),
                ("reject_reason", models.TextField(blank=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "employee_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="employee.employee",
                        verbose_name="Employee",
                    ),
                ),
                ("history_tags", models.ManyToManyField(to="horilla_audit.audittag")),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
                (
                    "history_relation",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="history_set",
                        to="leave.leaveallocationrequest",
                    ),
                ),
                (
                    "leave_type_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="leave.leavetype",
                        verbose_name="Leave type",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Leave Allocation Request",
                "verbose_name_plural": "historical Leave Allocation Requests",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalCompensatoryLeaveRequest",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "history_title",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("history_description", models.TextField(null=True)),
                ("history_highlight", models.BooleanField(default=False, null=True)),
                ("requested_days", models.FloatField(blank=True, null=True)),
                ("requested_date", models.DateField(default=django.utils.timezone.now)),
                ("description", models.TextField(max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("requested", "Requested"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="requested",
                        max_length=30,
                    ),
                ),
                ("reject_reason", models.TextField(blank=True, max_length=255)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "employee_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="employee.employee",
                        verbose_name="Employee",
                    ),
                ),
                (
                    "history_relation",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="history_set",
                        to="leave.compensatoryleaverequest",
                    ),
                ),
                ("history_tags", models.ManyToManyField(to="horilla_audit.audittag")),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
                (
                    "leave_type_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="leave.leavetype",
                        verbose_name="Leave type",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical compensatory leave request",
                "verbose_name_plural": "historical compensatory leave requests",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalAvailableLeave",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "history_title",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("history_description", models.TextField(null=True)),
                ("history_highlight", models.BooleanField(default=False, null=True)),
                (
                    "available_days",
                    models.FloatField(default=0, verbose_name="Available Days"),
                ),
                (
                    "carryforward_days",
                    models.FloatField(default=0, verbose_name="Carryforward Days"),
                ),
                (
                    "total_leave_days",
                    models.FloatField(default=0, verbose_name="Total Leave Days"),
                ),
                (
                    "assigned_date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="Assigned Date"
                    ),
                ),
                (
                    "reset_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Leave Reset Date"
                    ),
                ),
                (
                    "expired_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="CarryForward Expired Date"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "employee_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="employee.employee",
                        verbose_name="Employee",
                    ),
                ),
                (
                    "history_relation",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="history_set",
                        to="leave.availableleave",
                    ),
                ),
                ("history_tags", models.ManyToManyField(to="horilla_audit.audittag")),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
                (
                    "leave_type_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="leave.leavetype",
                        verbose_name="Leave type",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical available leave",
                "verbose_name_plural": "historical available leaves",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name="compensatoryleaverequest",
            name="leave_type_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="leave.leavetype",
                verbose_name="Leave type",
            ),
        ),
        migrations.AddField(
            model_name="availableleave",
            name="leave_type_id",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="employee_available_leave",
                to="leave.leavetype",
                verbose_name="Leave type",
            ),
        ),
        migrations.CreateModel(
            name="RestrictLeave",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Title")),
                ("start_date", models.DateField(verbose_name="Start Date")),
                ("end_date", models.DateField(verbose_name="End Date")),
                (
                    "include_all",
                    models.BooleanField(
                        default=True,
                        help_text="Enable to select all Leave types.",
                        verbose_name="Include All",
                    ),
                ),
                (
                    "description",
                    models.TextField(null=True, verbose_name="Description"),
                ),
                (
                    "company_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.company",
                        verbose_name="Company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.department",
                        verbose_name="Department",
                    ),
                ),
                (
                    "exclued_leave_types",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Choose leave types to exclude from restriction.",
                        related_name="excluded_leave_type",
                        to="leave.leavetype",
                        verbose_name="Exclude Leave Types",
                    ),
                ),
                (
                    "job_position",
                    models.ManyToManyField(
                        blank=True,
                        help_text="If no job positions are specifically selected, the system will consider all job positions under the selected department.",
                        to="base.jobposition",
                        verbose_name="Job Position",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
                (
                    "spesific_leave_types",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Choose specific leave types to restrict.",
                        related_name="spesific_leave_type",
                        to="leave.leavetype",
                        verbose_name="Specific Leave Types",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CompanyLeave",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "based_on_week",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "First Week"),
                            ("1", "Second Week"),
                            ("2", "Third Week"),
                            ("3", "Fourth Week"),
                            ("4", "Fifth Week"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "based_on_week_day",
                    models.CharField(
                        choices=[
                            ("0", "Monday"),
                            ("1", "Tuesday"),
                            ("2", "Wednesday"),
                            ("3", "Thursday"),
                            ("4", "Friday"),
                            ("5", "Saturday"),
                            ("6", "Sunday"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "company_id",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="base.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
            ],
            options={
                "unique_together": {("based_on_week", "based_on_week_day")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="availableleave",
            unique_together={("leave_type_id", "employee_id")},
        ),
    ]
